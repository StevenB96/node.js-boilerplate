import {
  useState,
  useEffect,
  useReducer,
} from 'react';
import {
  useDispatch,
  useSelector,
} from 'react-redux';
import {
  // getProfileRequest,
} from './Redux/Actions/appActions';

function App() {
  const containerRef = useRef();
  const dispatch = useDispatch();
  const app = useSelector(state => state.app);
  const [value, setValue] = useState(null);

  useEffect(() => {
    // Set up resize listener
    const handleResize = () => {
      console.log('Window resized!');
      // Your resize logic here
    };
    window.addEventListener('resize', handleResize);

    // Clean up listeners
    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);

  useEffect(() => {
    // Set up listener
    const timer = setTimeout(() => {
      setValue(value + 1);
    }, 1000);

    // Clean up listeners
    return () => {
      clearTimeout(timer);
    };
  }, []);

  useEffect(() => {
    // dispatch(getProfileRequest());
  }, []);

  return (
    <div
      ref={containerRef}
    >
    </div>
  );
}

export default App;
